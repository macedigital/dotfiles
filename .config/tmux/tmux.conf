# do not source files for each pane
set -g default-command "${SHELL}"

# set 256 colors
set -g default-terminal "screen-256color"

# expect utf-8 everywhere
set -q -g status-utf8 on
setw -q -g utf8 on

# rename window based on active pane
set-window-option -g automatic-rename

# Enter window name when creating a new one (kind of conflicts with auto-naming)
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# enable mouse-mode including scrolling
set -g mouse on
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Reference: https://ask.fedoraproject.org/t/copy-pasting-in-tmux/1724/9#post_9
# Copy mouse selection tmux buffer AND to (X11) clipboard
bind-key -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xsel -i --clipboard"

# increase history limit
set -g history-limit 10000

# remap C-b > C-a (like screen does, also prevents conflict with vim)
set-option -g prefix C-a
bind-key C-a last-window

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# set vi mode keys:
setw -g mode-keys vi

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use | and - to split the windows
bind-key | split-window -h
bind-key - split-window -v

# apply powerline-like statusbar colors
set -g status-justify "left"
set -g status "on"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-style "bg=colour234"
set -g message-style "bg=colour31"
set -ag message-style "fg=colour231"
set -g message-command-style "fg=colour231"
set -ag message-command-style "bg=colour31"
set -g pane-active-border-style "fg=colour254"
set -g pane-border-style "fg=colour240"
setw -g window-status-activity-style "bg=colour234"
setw -ag window-status-activity-style "fg=colour250"
setw -g window-status-separator ""
setw -g window-status-style "bg=colour234"
setw -g window-status-style "fg=colour250"
set -g status-left "#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour252] #h "
setw -g window-status-format "#[fg=colour244,bg=colour234] #I #[fg=colour250,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour117,bg=colour31] #I #[fg=colour231,bg=colour31,bold] #W #[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# vim:ft=tmux:ts=4:sw=4:et:
